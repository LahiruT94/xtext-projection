/*
 * generated by Xtext 2.16.0
 */
grammar InternalProjectionLang;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package com.ifs.lang.projection.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.ifs.lang.projection.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import com.ifs.lang.projection.services.ProjectionLangGrammarAccess;

}
@parser::members {
	private ProjectionLangGrammarAccess grammarAccess;

	public void setGrammarAccess(ProjectionLangGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getElementsAssignment()); }
		(rule__Model__ElementsAssignment)*
		{ after(grammarAccess.getModelAccess().getElementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProjection
entryRuleProjection
:
{ before(grammarAccess.getProjectionRule()); }
	 ruleProjection
{ after(grammarAccess.getProjectionRule()); } 
	 EOF 
;

// Rule Projection
ruleProjection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProjectionAccess().getGroup()); }
		(rule__Projection__Group__0)
		{ after(grammarAccess.getProjectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComponent
entryRuleComponent
:
{ before(grammarAccess.getComponentRule()); }
	 ruleComponent
{ after(grammarAccess.getComponentRule()); } 
	 EOF 
;

// Rule Component
ruleComponent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComponentAccess().getGroup()); }
		(rule__Component__Group__0)
		{ after(grammarAccess.getComponentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLayer
entryRuleLayer
:
{ before(grammarAccess.getLayerRule()); }
	 ruleLayer
{ after(grammarAccess.getLayerRule()); } 
	 EOF 
;

// Rule Layer
ruleLayer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLayerAccess().getGroup()); }
		(rule__Layer__Group__0)
		{ after(grammarAccess.getLayerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDescription
entryRuleDescription
:
{ before(grammarAccess.getDescriptionRule()); }
	 ruleDescription
{ after(grammarAccess.getDescriptionRule()); } 
	 EOF 
;

// Rule Description
ruleDescription 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDescriptionAccess().getGroup()); }
		(rule__Description__Group__0)
		{ after(grammarAccess.getDescriptionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCategory
entryRuleCategory
:
{ before(grammarAccess.getCategoryRule()); }
	 ruleCategory
{ after(grammarAccess.getCategoryRule()); } 
	 EOF 
;

// Rule Category
ruleCategory 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCategoryAccess().getGroup()); }
		(rule__Category__Group__0)
		{ after(grammarAccess.getCategoryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntityset
entryRuleEntityset
:
{ before(grammarAccess.getEntitysetRule()); }
	 ruleEntityset
{ after(grammarAccess.getEntitysetRule()); } 
	 EOF 
;

// Rule Entityset
ruleEntityset 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntitysetAccess().getGroup()); }
		(rule__Entityset__Group__0)
		{ after(grammarAccess.getEntitysetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getProjectionParserRuleCall_0()); }
		ruleProjection
		{ after(grammarAccess.getTypeAccess().getProjectionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getComponentParserRuleCall_1()); }
		ruleComponent
		{ after(grammarAccess.getTypeAccess().getComponentParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getLayerParserRuleCall_2()); }
		ruleLayer
		{ after(grammarAccess.getTypeAccess().getLayerParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getDescriptionParserRuleCall_3()); }
		ruleDescription
		{ after(grammarAccess.getTypeAccess().getDescriptionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getCategoryParserRuleCall_4()); }
		ruleCategory
		{ after(grammarAccess.getTypeAccess().getCategoryParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getEntitysetParserRuleCall_5()); }
		ruleEntityset
		{ after(grammarAccess.getTypeAccess().getEntitysetParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Projection__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Projection__Group__0__Impl
	rule__Projection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Projection__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectionAccess().getProjectionKeyword_0()); }
	'projection'
	{ after(grammarAccess.getProjectionAccess().getProjectionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Projection__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Projection__Group__1__Impl
	rule__Projection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Projection__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectionAccess().getNameAssignment_1()); }
	(rule__Projection__NameAssignment_1)
	{ after(grammarAccess.getProjectionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Projection__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Projection__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Projection__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectionAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getProjectionAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__0__Impl
	rule__Component__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getComponentKeyword_0()); }
	'component'
	{ after(grammarAccess.getComponentAccess().getComponentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__1__Impl
	rule__Component__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getNameAssignment_1()); }
	(rule__Component__NameAssignment_1)
	{ after(grammarAccess.getComponentAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getComponentAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Layer__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Layer__Group__0__Impl
	rule__Layer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayerAccess().getLayerKeyword_0()); }
	'layer'
	{ after(grammarAccess.getLayerAccess().getLayerKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Layer__Group__1__Impl
	rule__Layer__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayerAccess().getNameAssignment_1()); }
	(rule__Layer__NameAssignment_1)
	{ after(grammarAccess.getLayerAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Layer__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayerAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getLayerAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Description__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Description__Group__0__Impl
	rule__Description__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDescriptionAccess().getDescriptionKeyword_0()); }
	'description'
	{ after(grammarAccess.getDescriptionAccess().getDescriptionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Description__Group__1__Impl
	rule__Description__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDescriptionAccess().getNameAssignment_1()); }
	(rule__Description__NameAssignment_1)
	{ after(grammarAccess.getDescriptionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Description__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDescriptionAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getDescriptionAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Category__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Category__Group__0__Impl
	rule__Category__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Category__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCategoryAccess().getCategoryKeyword_0()); }
	'category'
	{ after(grammarAccess.getCategoryAccess().getCategoryKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Category__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Category__Group__1__Impl
	rule__Category__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Category__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCategoryAccess().getNameAssignment_1()); }
	(rule__Category__NameAssignment_1)
	{ after(grammarAccess.getCategoryAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Category__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Category__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Category__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCategoryAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getCategoryAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entityset__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entityset__Group__0__Impl
	rule__Entityset__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entityset__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntitysetAccess().getEntitysetKeyword_0()); }
	'entityset'
	{ after(grammarAccess.getEntitysetAccess().getEntitysetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entityset__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entityset__Group__1__Impl
	rule__Entityset__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entityset__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntitysetAccess().getNameAssignment_1()); }
	(rule__Entityset__NameAssignment_1)
	{ after(grammarAccess.getEntitysetAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entityset__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entityset__Group__2__Impl
	rule__Entityset__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Entityset__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntitysetAccess().getForKeyword_2()); }
	'for'
	{ after(grammarAccess.getEntitysetAccess().getForKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entityset__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entityset__Group__3__Impl
	rule__Entityset__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Entityset__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntitysetAccess().getEntityAssignment_3()); }
	(rule__Entityset__EntityAssignment_3)
	{ after(grammarAccess.getEntitysetAccess().getEntityAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entityset__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entityset__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entityset__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntitysetAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getEntitysetAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ElementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getElementsTypeParserRuleCall_0()); }
		ruleType
		{ after(grammarAccess.getModelAccess().getElementsTypeParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Projection__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getProjectionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getComponentAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLayerAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getLayerAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDescriptionAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getDescriptionAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Category__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCategoryAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getCategoryAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entityset__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntitysetAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEntitysetAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entityset__EntityAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntitysetAccess().getEntityIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getEntitysetAccess().getEntityIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
